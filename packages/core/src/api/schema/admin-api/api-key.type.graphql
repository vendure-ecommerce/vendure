type ApiKey implements Node {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!

    """
    ID by which we can look up the API-Key.
    Also helps you identify keys without leaking the underlying secret API-Key.
    """
    lookupId: String!
    "Helps you identify unused keys"
    lastUsedAt: DateTime

    """
    Usually the user who created the ApiKey but could also be used as the basis for
    restricting resolvers to `Permission.Owner` queries for customers for example.
    """
    owner: User!
    "This is the underlying User which determines the kind of permissions for this API-Key."
    user: User!

    "A descriptive name so you can remind yourself where the API-Key gets used"
    name: String!

    translations: [ApiKeyTranslation!]!
}

type ApiKeyTranslation implements Node {
    id: ID!
    createdAt: DateTime!
    updatedAt: DateTime!
    languageCode: LanguageCode!

    "A descriptive name so you can remind yourself where the API-Key gets used"
    name: String!
}

# generated
input ApiKeyListOptions

type ApiKeyList implements PaginatedList {
    items: [ApiKey!]!
    totalItems: Int!
}
